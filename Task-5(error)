import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

class Course {
    private String code;
    private String title;
    private String description;
    private int capacity;
    private int availableSlots;

    public Course(String code, String title, String description, int capacity) {
        this.code = code;
        this.title = title;
        this.description = description;
        this.capacity = capacity;
        this.availableSlots = capacity;
    }

    public String getCode() {
        return code;
    }

    public String getTitle() {
        return title;
    }

    public String getDescription() {
        return description;
    }

    public int getAvailableSlots() {
        return availableSlots;
    }

    public boolean registerStudent() {
        if (availableSlots > 0) {
            availableSlots--;
            return true;
        }
        return false;
    }

    public void dropStudent() {
        availableSlots++;
    }
}

class Student {
    private int studentId;
    private String name;
    private List<String> registeredCourses;

    public Student(int studentId, String name) {
        this.studentId = studentId;
        this.name = name;
        this.registeredCourses = new ArrayList<>();
    }

    public int getStudentId() {
        return studentId;
    }

    public String getName() {
        return name;
    }

    public List<String> getRegisteredCourses() {
        return registeredCourses;
    }

    public void registerCourse(String courseCode) {
        registeredCourses.add(courseCode);
    }

    public void dropCourse(String courseCode) {
        registeredCourses.remove(courseCode);
    }
}

public class CourseRegistrationSystem {
    private Map<String, Course> courseDatabase;
    private Map<Integer, Student> studentDatabase;

    public CourseRegistrationSystem() {
        courseDatabase = new HashMap<>();
        studentDatabase = new HashMap<>();
    }

    public void addCourse(String code, String title, String description, int capacity) {
        Course course = new Course(code, title, description, capacity);
        courseDatabase.put(code, course);
    }

    public void addStudent(int studentId, String name) {
        Student student = new Student(studentId, name);
        studentDatabase.put(studentId, student);
    }

    public void displayAvailableCourses() {
        System.out.println("Available Courses:");
        for (Course course : courseDatabase.values()) {
            System.out.println(course.getCode() + " - " + course.getTitle() +
                    " (" + course.getAvailableSlots() + " slots available)");
        }
    }

    public void registerStudentForCourse(int studentId, String courseCode) {
        Student student = studentDatabase.get(studentId);
        Course course = courseDatabase.get(courseCode);
        if (student != null && course != null) {
            if (course.registerStudent()) {
                student.registerCourse(courseCode);
                System.out.println("Student " + student.getName() + " registered for course " + course.getTitle());
            } else {
                System.out.println("Course " + course.getTitle() + " is full.");
            }
        } else {
            System.out.println("Invalid student ID or course code.");
        }
    }

    public void dropStudentFromCourse(int studentId, String courseCode) {
        Student student = studentDatabase.get(studentId);
        Course course = courseDatabase.get(courseCode);
        if (student != null && course != null) {
            student.dropCourse(courseCode);
            course.dropStudent();
            System.out.println("Student " + student.getName() + " dropped from course " + course.getTitle());
        } else {
            System.out.println("Invalid student ID or course code.");
        }
    }

    public static void main(String[] args) {
        CourseRegistrationSystem system = new CourseRegistrationSystem();
        system.addCourse("CS101", "Introduction to Computer Science", "Basic programming concepts", 30);
        system.addCourse("MATH201", "Calculus I", "Limits, derivatives, and integrals", 25);
        system.addStudent(1001, "Alice");
        system.addStudent(1002, "Bob");

        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("\n1. Display available courses");
            System.out.println("2. Register student for a course");
            System.out.println("3. Drop student from a course");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    system.displayAvailableCourses();
                    break;
                case 2:
                    System.out.print("Enter student ID: ");
                    int studentId = scanner.nextInt();
                    System.out.print("Enter course code: ");

